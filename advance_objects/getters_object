

=====================TASK 1 : getters=====================
In robot, create a getter method named energyLevel using the get keyword. Leave
function body blank for now.
2.
Inside the getter method, add an if statement to check if this._energyLevel is
a number using the typeof operator. If that condition is truthy, return 'My
current energy level is ENERGYLEVEL'. Replace ENERGYLEVEL with the value of
this._energyLevel.

Make sure you return the string and not logging it to the console.
3.
If this._energyLevel isn’t a number it could be that the _energyLevel property
was altered. Let’s add a default return statement for when such a scenario arises.
Add an else statement that returns 'System malfunction: cannot retrieve energy
level'.
4.
Log the result of calling the getter method energyLevel on robot to the console.

Notice that the method will return a formatted response rather than just
accessing a property!

=====================TASK 2 :getters and setters=====================

Currently, in robot there is a getter method for numOfSensors but no setter
method! What if we need to add or remove some sensors? Let’s fix that problem.

Add a setter method named numOfSensors using the set keyword. Provide a
parameter of num. Leave the function body empty for now.
2.
There are a couple of things we should do in the setter method:

Add a check to see if num is a number using the typeof operator.
num should also be greater than or equal to 0.
If both conditions are met, reassign this._numOfSensors to num.
Checkpoint 3 Passed

3.
Now add an else that logs 'Pass in a number that is greater than or equal to 0'
to the console.
4.
Use the numOfSensors setter method on robot to assign _numOfSensors to 100.
5.
To check that the setter method worked, console.log() robot.numOfSensors.
